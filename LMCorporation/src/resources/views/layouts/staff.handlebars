<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/employee.css" />
    <link href="//db.onlinewebfonts.com/c/860c3ec7bbc5da3e97233ccecafe512e?family=Circular+Std+Book" rel="stylesheet"
        type="text/css" />
    <script src="https://kit.fontawesome.com/26d4a64054.js" defer></script>
    <title>Employee</title>
</head>

<body>
    <div class="edit_form">
        <div class="edit_table">
            <div class="edit_header">
                <p>Edit Employee</p>
                <button class="close">
                    <i class="far fa-times-circle"></i>
                </button>
            </div>

            <div class="edit_body">

                <div class="form_group">
                    <p class="label">Tên
                        <span class="require">*</span>

                    </p>
                    <input class="name_input" type="text">
                </div>
                <div class="form_group">
                    <p class="label">Số điện thoại
                        <span class="require">*</span>
                    </p>

                    <input class="phone_input" type="text">
                </div>
                <div class="form_group">
                    <p class="label">Email
                        <span class="require">*</span>
                    </p>

                    <input class="email_input" type="text">
                </div>
                <div class="form_group">
                    <p class="label">Ngày Sinh
                        <span class="require">*</span>

                    </p>
                    <input class="DOB_input" type="date">
                </div>
                <div class="form_group">
                    <p class="label">ID
                        <span class="require">*</span>

                    </p>
                    <input class="ID_input" type="text" value="" readonly>
                </div>
                <div class="form_group">
                    <p class="label">Địa Chỉ
                        <span class="require">*</span>

                    </p>
                    <input class="address_input" type="text">
                </div>

            </div>
            <div class="invalid">
                <p></p>
            </div>
            <div class="save">
                <button class="save_button">Save</button>
            </div>
        </div>
    </div>
    {{>header}}
    <section>

        <div class="left-col">
            <div class="background">
                <div class="background-content">
                    <div class="big-avatar"></div>
                    <div class="client-name">Le Minh</div>
                </div>
            </div>
            <div class="content-list">
                <div class="home_div">
                    <p class="title">
                        <i class="fas fa-home"></i>
                        Trang Chủ
                    </p>
                    <div class="home child">
                        <div class="homepage">
                            <i class="fas fa-dot-circle"></i>
                            <a href="/">Dashboard</a>
                        </div>
                    </div>

                </div>
                <div class="employee_div">
                    <p class="title">
                        <i class="fas fa-user-alt"></i>
                        Nhân viên
                    </p>
                    <div class="employee child">
                        <div class="employees">
                            <i class="fas fa-dot-circle"></i>
                            <a href="/employee">Quản lí nhân viên</a>
                        </div>
                        <div class="role_right">
                            <i class="fas fa-dot-circle"></i>
                            <a href=""> Cấp quyền truy cập </a>
                        </div>
                    </div>
                </div>
                <div class="project_div">
                    <p class="title">
                        <i class="fas fa-tasks"></i>
                        Quản lí dự án
                    </p>
                    <div class="project child">
                        <div class="projects">
                            <i class="fas fa-dot-circle"></i>
                            <a href="">Dự án</a>
                        </div>
                        <div class="pay">
                            <i class="fas fa-dot-circle"></i>
                            <a href="">Hóa đơn</a>
                        </div>
                    </div>
                </div>
                <div class="management_div">
                    <p class="title">
                        <i class="fas fa-suitcase"></i>
                        Khả năng làm việc
                    </p>
                    <div class="management child">
                        <div class="reward">
                            <i class="fas fa-dot-circle"></i>
                            <a href=""> Thưởng </a>
                        </div>
                        <div class="warning">
                            <i class="fas fa-dot-circle"></i>
                            <a href=""> Cảnh báo </a>
                        </div>
                        <div class="kick">
                            <i class="fas fa-dot-circle"></i>
                            <a href=""> Thôi việc </a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <!--  -->
        <div class="right-col">
            {{{body}}}

        </div>
        <script>
            generateTable();
            async function fetchData(url, body) {
                const defaultParams = {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },

                }
                defaultParams.body = JSON.stringify(body);
                const myResponse = await fetch(url, defaultParams);
                const myJson = await myResponse.json();

                return myJson
            }
            async function generateTable() {
                console.log('generate');
                let url = "http://localhost:3000/employee/all";
                let body = {
                    need: "getAll"
                };
                const employees = await fetchData(url, body);
                console.log(employees);
                const table = document.querySelector(".table");
                employees.forEach(element => {
                    const row = generateRow(element);
                    table.appendChild(row);
                })
            }
            function generateRow(data) {
                const table_row = document.createElement('tr');
                table_row.classList.add('t_row');
                table_row.setAttribute('id', `row_${data["EmployeeID"]}`);
                for (const key in data) {

                    let keyData = data[key];
                    if (key == "DOB") {
                        dateRaw = new Date(data[key]);

                        year = dateRaw.getFullYear();
                        month = dateRaw.getMonth() + 1;
                        date = dateRaw.getDate();
                        if (date < 10) {
                            date = '0' + date;
                        } if (month < 10) {
                            month = '0' + month;
                        }

                        keyData = String(date) + " / " + String(month) + " / " + String(year);
                    }
                    const table_data = generateData(keyData);
                    table_row.appendChild(table_data);


                }
                const table_action = generateAction(data["EmployeeID"]);
                table_row.appendChild(table_action);
                return table_row;
            }
            function generateData(data) {
                const table_data = document.createElement('td');
                table_data.textContent = data;

                return table_data
            }

            function generateAction(ID) {
                const table_data = document.createElement('td');
                const edit_button = document.createElement('button');
                const delete_button = document.createElement('button');
                //
                edit_button.addEventListener('click', handleEdit);
                //
                table_data.classList.add('action');
                edit_button.classList.add('edit_button');
                edit_button.setAttribute('id', `${ID}_edit`);
                delete_button.classList.add('delete_button');
                delete_button.setAttribute('id', `${ID}_delete`);
                //
                edit_button.innerHTML = '<i class="fas fa-edit"></i>';
                delete_button.innerHTML = '<i class="far fa-trash-alt"></i>';
                table_data.appendChild(edit_button);
                table_data.appendChild(delete_button);
                return table_data;
            }

            function handleEdit(event) {
                const currentTarget = event.currentTarget;
                const idTarget = currentTarget.getAttribute('id');
                openEdit(idTarget);
            }

            function handleDelete() {
            }

            function openEdit(idName) {
                const id = idName[0];
                const editTable = document.querySelector('.edit_form');
                const closeButton = document.querySelector('.close');
                const idTextBox = editTable.querySelector('.ID_input');
                const saveButton = editTable.querySelector('.save_button');



                idTextBox.value = id;
                autoInput(id);
                closeButton.addEventListener('click', () => {
                    editTable.style.display = 'none';
                });
                saveButton.addEventListener('click', () => {
                    sendData(id);
                }, { once: true });
                editTable.style.display = 'flex';
            }

            function autoInput(ID) {
                console.log('sending');
                const editTable = document.querySelector('.edit_form');
                const trow = document.querySelector(`#row_${ID}`);
                const keys = trow.querySelectorAll('td');
                console.log(keys[1]);
                console.log(keys[2]);
                console.log(keys[3]);
                console.log(keys[4]);
                editTable.querySelector(".name_input").value = keys[1].textContent;
                editTable.querySelector(".phone_input").value = keys[2].textContent;
                editTable.querySelector(".email_input").value = keys[3].textContent;
                editTable.querySelector(".address_input").value = keys[5].textContent;
            }
            async function sendData(id) {
                url = "http://localhost:3000/employee/edit";
                const editTable = document.querySelector('.edit_form');
                const name = editTable.querySelector(".name_input").value;
                const phone = editTable.querySelector(".phone_input").value;
                const email = editTable.querySelector(".email_input").value;
                //const DOB = new Date(editTable.querySelector(".DOB_input").value).toISOString();
                const DOB = editTable.querySelector(".DOB_input").value;

                const address = editTable.querySelector(".address_input").value;

                if (validateInput(name, phone, email, address, DOB)) {
                    console.log("----------------");
                    const body = {};
                    body.id = id;
                    body.name = name;
                    body.phone = phone;
                    body.email = email;
                    body.DOB = DOB;
                    body.address = address;
                    editTable.style.display = 'none';
                    console.log(body);
                    const data = await fetchData(url, body);
                    if (data.status == 'success') {
                        removeEventListener();
                        const table = document.querySelectorAll('.t_row');
                        table.forEach(element => {
                            element.remove();
                        })
                        generateTable();
                    }
                } else {
                    const saveButton = editTable.querySelector('.save_button');
                    saveButton.addEventListener('click', () => {
                        sendData(id);
                    }, { once: true });
                }
            }

            function removeEventListener() {
                const edit_button = document.querySelector('.edit_button');
                //const delete_button = document.querySelector('.delete_button');;
                edit_button.removeEventListener('click', handleEdit);

                //delete_button.removeEventListener('click', handleEdit);

            }

            function validateInput(name, phone, email, address, DOB) {
                let check = false;
                if (name != null && name != "" && isNameValid(name)) {
                    check = true;
                } else {
                    displayInvalid('Tên');
                    return false;
                }
                if (phone != null && phone != "" && isPhoneValid(phone)) {
                    check = true;
                } else {
                    displayInvalid('Số điện thoại');
                    return false;
                }
                if (email != null && email != "" && isEmailValid(email)) {
                    check = true;
                } else {
                    displayInvalid('Email');
                    return false;
                }
                if (address != null && address != "") {
                    check = true;
                } else {
                    displayInvalid('Địa chỉ');
                    return false;
                }
                if (DOB != null && DOB != "") {
                    check = true;
                } else {
                    displayInvalid('Ngày sinh');
                    return false;
                }
                return check;

            }
            function removeAscent(str) {
                if (str === null || str === undefined) return str;
                str = str.toLowerCase();
                str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
                str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
                str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
                str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
                str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
                str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
                str = str.replace(/đ/g, "d");
                return str;
            }
            function isNameValid(name) {
                const re = /^((?=[a-z \']).)+$/i // regex here
                return re.test(removeAscent(name))
            }

            function isPhoneValid(phone) {
                const re = /^\+?\d{1,3}?[- .]?\(?(?:\d{2,3})\)?[- .]?\d\d\d[- .]?\d\d\d\d$/g;
                return re.test(phone);
            }

            function isEmailValid(email) {
                const re = /[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}/igm;
                return re.test(email);
            }
            function displayInvalid(str) {
                const invalid_div = document.querySelector('.invalid');
                const message = invalid_div.querySelector('p');
                message.textContent = `* Sai cú pháp tại ${str}`;
                invalid_div.style.display = 'block';
            }




        </script>

    </section>
    {{>footer}}
</body>

</html>